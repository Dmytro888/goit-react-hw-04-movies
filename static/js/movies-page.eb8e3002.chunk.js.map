{"version":3,"sources":["pages/MoviesPage/MoviesPage.jsx","services/fetchApi.js","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.module.css"],"names":["MoviesPage","state","searchMovies","query","handleChange","evt","setState","target","value","handleSubmit","preventDefault","props","history","push","pathname","location","search","this","slice","searchMoviesFetch","then","prevProps","className","styles","container","title","form","onSubmit","input","name","type","placeholder","onChange","button","length","MoviesList","renderMovie","Component","key","popularMoviesFetch","a","Axios","get","response","data","results","moviesDetailsFetch","movieId","moviesCastFetch","cast","moviesReviewsFetch","module","exports","withRouter","moviesList","map","id","poster_path","original_name","link","to","from","img","src"],"mappings":"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","file":"static/js/movies-page.eb8e3002.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { searchMoviesFetch } from '../../services/fetchApi';\r\nimport MoviesList from '../../components/MoviesList';\r\nimport styles from './MoviesPage.module.css';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    searchMovies: [],\r\n    query: '',\r\n  };\r\n\r\n  componentDidMount () {\r\n    if (this.props.location.search) {\r\n      const query = this.props.location.search.slice(1);\r\n      searchMoviesFetch(query).then(searchMovies =>\r\n        this.setState({ searchMovies }),\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (prevProps.location.search !== this.props.location.search) {\r\n      searchMoviesFetch(this.state.query).then(searchMovies =>\r\n        this.setState({ searchMovies }),\r\n      );\r\n    }\r\n  }\r\n\r\n  handleChange = evt => {\r\n    this.setState({ query: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    const { query } = this.state;\r\n\r\n    this.props.history.push({\r\n      pathname: this.props.location.pathname,\r\n      search: query,\r\n    });\r\n  };\r\n\r\n  render () {\r\n    const { query, searchMovies } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.title}>Search Movies...</h1>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <input\r\n            className={styles.input}\r\n            name='query'\r\n            type='text'\r\n            placeholder='Search films'\r\n            value={query}\r\n            onChange={this.handleChange}\r\n          ></input>\r\n          <button className={styles.button} type='submit'>\r\n            Search\r\n          </button>\r\n        </form>\r\n        {searchMovies.length > 0 && <MoviesList renderMovie={searchMovies} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import Axios from 'axios';\r\n\r\nconst key = '65999cd4dc4e9b42ad69f2cfa64d7f94';\r\n\r\nconst popularMoviesFetch = async () => {\r\n  const response = await Axios.get(\r\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${key}`,\r\n  );\r\n  return response.data.results;\r\n};\r\n\r\nconst searchMoviesFetch = async query => {\r\n  const response = await Axios.get(\r\n    `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=1`,\r\n  );\r\n\r\n  return response.data.results;\r\n};\r\n\r\nconst moviesDetailsFetch = async movieId => {\r\n  const response = await Axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}&language=en-US`,\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst moviesCastFetch = async movieId => {\r\n  const response = await Axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${key}&language=en-US`,\r\n  );\r\n\r\n  return response.data.cast;\r\n};\r\nconst moviesReviewsFetch = async movieId => {\r\n  const response = await Axios.get(\r\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}&language=en-US`,\r\n  );\r\n\r\n  return response.data.results;\r\n};\r\n\r\nexport {\r\n  popularMoviesFetch,\r\n  searchMoviesFetch,\r\n  moviesDetailsFetch,\r\n  moviesCastFetch,\r\n  moviesReviewsFetch,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesList\":\"MoviesList_moviesList__2ez2j\",\"link\":\"MoviesList_link__3aIwz\",\"img\":\"MoviesList_img__o1CA_\",\"title\":\"MoviesList_title__3GfDK\"};","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport styles from './MoviesList.module.css';\r\n\r\nconst MoviesList = ({ renderMovie, location }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.moviesList}>\r\n        {renderMovie.map(({ title, id, poster_path, original_name }) => (\r\n          <li key={id}>\r\n            <div className={styles.link}>\r\n              <NavLink\r\n                className={styles.link}\r\n                to={{\r\n                  pathname: `/movies/${id}`,\r\n                  state: { from: location },\r\n                }}\r\n              >\r\n                <img\r\n                  className={styles.img}\r\n                  src={\r\n                    poster_path\r\n                      ? `https://image.tmdb.org/t/p/w300${poster_path}`\r\n                      : 'defaultMovie'\r\n                  }\r\n                />\r\n                <p className={styles.title}>{title || original_name}</p>\r\n              </NavLink>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesPage_container__D8uxy\",\"title\":\"MoviesPage_title__20-c0\",\"form\":\"MoviesPage_form__1G5RN\",\"input\":\"MoviesPage_input__1O-DY\",\"button\":\"MoviesPage_button__7DA8m\"};"],"sourceRoot":""}